name: Terraform

on:
  
  push:
    branches: [ master ]

  workflow_dispatch:

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
    
      - uses: docker/build-push-action@v2
        with:
          context: src/app
          build-args: SECRET_KEY=${{ secrets.SECRET_KEY }}
          tags: test:latest
          load: true
          push: false

      - name: Unit test
        run: docker run --rm -e SECRET_KEY=${{ secrets.SECRET_KEY }} test:latest python3 manage.py test

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - uses: hashicorp/setup-terraform@v1
       
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
 
      - name: Initialize Terraform
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: terraform init -backend-config="conn_str=$DATABASE_URL"
      
      - name: Terraform Plan
        env:
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
      - name: Terraform Apply
        env:
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        #if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve