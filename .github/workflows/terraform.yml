# This is a basic workflow to help you get started with Actions

name: Terraform

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - name: docker build
        run: docker build .
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
                
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - uses: hashicorp/setup-terraform@v1
       
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
 
      - name: Initialize Terraform
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: terraform init -backend-config="conn_str=$DATABASE_URL"
      
      - name: Terraform Plan
        env:
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
      - name: Terraform Apply
        env:
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        #if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve



      

